{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Castor & Pollux User Guide Castor & Pollux is a Roland Juno-inspired oscillator. It contains two digitally-controlled analog oscillators implemented using a faithfully modernized version of the original Juno 106 design. Like its inspiration, it can give you that wonderful 80s sound with independent and mixed ramp, pulse, and sub outputs. But the twins do not stop there- the second oscillator can be used to layer in thick detuned sounds, harmonically complex hard synced waveshapes, or as a fully independent second oscillator. Specifications Getting support and help Installing the module Inputs and outputs Tuning Waveshapes Oscillator stacking Chorusing Hard sync Internal low-frequency oscillator Editing module settings Updating the firmware Open source hardware & software Warranty, disclaimers, and limits Acknowledgments and thanks Specifications # $279 MSRP 14 HP +12v @ 100mA, -12v @ 35mA 25mm deep 2 separate oscillators 7 octave range 9 total outputs with waveform outputs and onboard mixers Pitch CV ins (0 to 6v) and pitch knobs (-1 to +1 octave, configurable) Pulse-width CV ins and knobs Hard sync Hardware chorusing Internal low-frequency oscillator ModularGrid page Getting support and help # We want you to have a wonderful experience with your module. If you need help or run into problems, please reach out to us. Email is the best way for product issues, whereas Discord and GitHub are great for getting advice and help on how to customize your module. Send us an email File a bug on GitHub Reach out on the Discord Installing the module # To install this into your Eurorack setup: Connect a Eurorack power cable from your power supply to the back of the module. Note that even though the power connector on the module is keyed, double check that the red stripe is on the side labeled red stripe ! Screw the module to your rack's rails. Inputs and outputs # Castor & Pollux contains two separate oscillators. Each has two inputs with associated knobs: A pitch CV input. The range is 0v to +6v. A pitch knob. The range is -1 octave to +1 octave and is added to any incoming pitch CV. These have a special response curve that makes it easier to tune the oscillators . A pulse width CV input. This changes the pulse width of the pulse wave. The range is 0v to +5v. A pulse width knob. When combined with the pulse width CV it sets the minimum pulse width. Each oscillator also has three dedicated waveshape outputs: A ramp wave output A pulse wave output A sub square wave output Each waveshape is nominally 10v peak-to-peak. You can read more about the sound of each waveshape in the waveshape section. Each oscillator also has a waveshape mixer that contains level knobs for each waveshape and a mix output: The waveshape section also shows how mixing the waveshapes affects the waveshape and sound. There is also a combined output that mixes the output from both oscillators mixer together. It has a crossfader knob to determine which oscillator is more prominent in the mix: The oscillator stacking section has more details and sound samples of combining the oscillators together. Finally, there is a knob to enable chorusing and a button to enable hard sync: The chorusing section goes into more detail and has some sound samples, and the hard sync section shows how hard sync affects the second oscillator. Tuning # Castor & Pollux is an analog oscillator with a digital brain. It's calibrated during assembly to accurately track 1 volt/octave on the CV inputs and you can use the pitch knobs to adjust the tuning of each oscillator. In order to make tuning easier, the pitch knobs have a non-linear response: they are less sensitive in the middle of their range than the edges. It's usually easier to understand this visually, so try out this little demonstration: Linear response 440 Hz Non-linear response 440 Hz pitch knob Notice that with the non-linear response it's much easier to tune to frequencies around 440 Hz . This is how Castor & Pollux's pitch knobs work. You can configure how strong this effect is using the settings editor . Waveshapes # Just like the Juno, Castor & Pollux has three waveshape outputs: ramp, pulse, and sub. The ramp wave looks like this (click the image to start and stop the animation): Simulation vs reality These are simulations of perfect waveshapes. Castor & Pollux's waveshapes are generated by analog circuitry and they don't quite look exactly like these examples. That's a good thing - the analog weirdness is what adds character to the module. The ramp sounds like this: The pulse wave depends on the pulse width CV and knob. You can vary the pulse width in this animation to see how it affects the waveshape: pulse width You can also configure the internal low-frequency oscillator to modulate the pulse width. Here's some examples of the pulse wave's sound: Finally, there's the sub waveshape. It's a square wave that's one octave lower. Here's what it looks like: And here's some sound samples of the sub waveshape: These these waveshapes can be mixed together to produce much more complex and interesting waveshapes - try playing with the sliders under this animation and seeing how it affects the waveshape: ramp volume pulse volume pulse width sub volume Here's some sound samples of various mixes: Oscillator stacking # Because Castor & Pollux has two oscillators, you can combine them together to build much more complex sounds. When there is no input into the second oscillator's pitch CV jack, it will follow the pitch of the the first oscillator. You can use the pitch knob of the second oscillator to detune the second oscillator and cause interesting interactions with the first oscillator. You'll take your output from the combined output (marked by the symbol \u264a\ufe0e) and you can control the relative volume of the two oscillators using the crossfader (marked by the symbol \u03a3). You can play around with this interactive animation to see how detuning and mixing changes the final waveshape: detuning crossfader (\u03a3) This animation just uses the ramp waveshape, but the crossfader takes the mix from each oscillator's mixer, so you can combine many different waveshapes. Here's some sound samples of oscillator stacking: Chorusing # Inspired by the original Juno's analog chorus circuit, Castor & Pollux contains an adaptation of chorusing that works well for a monophonic voice. Instead of applying the chorus affect after sound generation, Castor & Pollux's chorusing works by varying the frequency of the second oscillator using an internal low-frequency oscillator . This means that you have to use both oscillators in order to hear this effect. The chorus knob (marked by the symbol \u03c6) determines the intensity of chorusing from none when fully counter-clockwise to its maximum at fully clockwise. The crossfader (marked by the symbol \u03a3) also has an impact on the intensity of the chorus. Finally, you can modify the speed of the chorus by changing the internal low-frequency oscillator's frequency . You can play around with this interactive animation to see how the chorusing amount changes the final waveshape. You'll need to click on the animation to start it otherwise you won't really be able to see the chorusing effect. chorusing amount (\u03c6) Here's some sound samples of chorusing: Hard sync # Hard sync is a feature seen in several synthesizer voices that have two or more oscillators, however, it's not a feature seen on the original Juno because each voice only had one oscillator. Since Castor & Pollux has two oscillators to work with it has an adaption of hard sync. Hard sync allows you to sync the second oscillator to the first - the output will retain the same base frequency as the first oscillator but the waveshape will be impacted by the frequency of the second oscillator. In other words, it'll sound like the same note but have a much different timbre. To use hard sync tap the hard sync button - the LEDs should all change to the same color. You'll use the first oscillator's pitch CV to set the note and you'll use the second oscillator's pitch knob or pitch CV input to control the timbre. You'll take the output from the second oscillator (or the combined output) - since hard sync does not impact the waveshape of the first oscillator. Here's some sound samples of hard sync: Heads up Due to the way hard sync works, you shouldn't set the second oscillator to a lower frequency than the first. It'll just result in the sound growing softer since the second oscillator doesn't have enough time to output a complete wave cycle. Internal low-frequency oscillator # Castor & Pollux has an built-in low-frequency oscillator ( LFO ) that's used for modulation. This LFO drives the chorus feature, but can also be assigned to some other parameters. To configure the internal LFO, hold down the hard sync button. The module's lights should change. While holding the hard sync button you can modify the following settings: Moving the chorus knob (\u03c6) will change the frequency of the LFO. The LEDs at the bottom of the module will pulse to show the LFO's frequency. Moving the pulse width knob of each of the oscillators will enable or disable LFO routing to the oscillator's pulse width. Turning the knob counter-clockwise will disable the LFO, turning it clockwise will enable it. The LEDs near the oscillator will illuminate if the LFO is enabled. When the LFO is enabled, the pulse width knob will control the intensity of the pulse width modulation instead of directly setting the pulse width. You can also configure the values for these settings at boot-up using the settings editor . Editing module settings # Even though Castor & Pollux uses analog circuitry to make its beautiful sounds, there is a little microcontroller brain inside that's orchestrating everything. There's a few settings you can tweak over USB, such as the LED brightness and the range of the pitch knobs. Head over to the web-based settings editor to tweak to your heart's content. Updating the firmware # Download the latest firmware from GitHub . It will be a .uf2 file. Connect Castor & Pollux to your computer via USB. The USB port is located underneath the panel. Note that you still have to power the module from a Eurorack power supply. Place Castor & Pollux in bootloader mode by pressing the reset button twice quickly. The reset button is located just below the USB port. Once in bootloader mode, you should see a drive on your computer named GEMINIBOOT . Copy the .uf2 file from step 1 to the GEMINIBOOT drive. The module should restart by itself. Open source hardware & software # Castor & Pollux is completely open source and hacking is encouraged. The firmware is available under the MIT License . Note that the firmware uses some third-party libraries that are under different, but compatible terms. Read the full text of the license for more details. The hardware designs is available under the permissive CERN-OHL-P v2 and is designed using KiCAD which is free and open-source. You can open the hardware files using KiCAD or you can check out a PDF of the schematics for the mainboard and the jackboard . Castor & Pollux is certified open source hardware Warranty, disclaimers, and limits # Modules purchased from Winterbloom have a warranty of six months from the date of purchase. This warranty covers any manufacturing defects in the module. It does not cover damage from due to incorrect handling, storage, or power, overvoltage events, or modifications. Please contact us if you are experiencing issues with your module. Modules returned under warranty will either be refunded, replaced, or repaired at our discretion. You will be responsible for the cost of returning the module to Winterbloom. Because Eurorack has a vast number of possible combinations of power supplies, modules, cases, and accessories, it is impossible for us to guarantee compatibility with every possible configuration. We make a reasonable effort to test modules with several power supplies, cases, and other modules. We encourage tinkering, however, we will not refund, repair, or replace any products that have been modified. We have stress tested Castor & Pollux under the following conditions. These are provided for reference only; we do not guarentee that that the module will function under these conditions. Continuous run time: at least 48 hours Overvoltage from power supply: at least \u00b118 volts Reverse voltage from power supply: at least \u00b118 volts Undervoltage from power supply: as low as \u00b110 volts Over and under voltage on inputs: at least \u00b18 volts Output connected to another output: at least \u00b18 volts Output shorted to ground: at least 60 minutes Acknowledgments and thanks # Castor & Pollux would not be possible without the help of the Adafruit, support from Microchip, and the volumes of literature documenting and analyzing the Juno's DCO design.","title":"User Guide"},{"location":"#specifications","text":"$279 MSRP 14 HP +12v @ 100mA, -12v @ 35mA 25mm deep 2 separate oscillators 7 octave range 9 total outputs with waveform outputs and onboard mixers Pitch CV ins (0 to 6v) and pitch knobs (-1 to +1 octave, configurable) Pulse-width CV ins and knobs Hard sync Hardware chorusing Internal low-frequency oscillator ModularGrid page","title":"Specifications"},{"location":"#getting-support-and-help","text":"We want you to have a wonderful experience with your module. If you need help or run into problems, please reach out to us. Email is the best way for product issues, whereas Discord and GitHub are great for getting advice and help on how to customize your module. Send us an email File a bug on GitHub Reach out on the Discord","title":"Getting support and help"},{"location":"#installing-the-module","text":"To install this into your Eurorack setup: Connect a Eurorack power cable from your power supply to the back of the module. Note that even though the power connector on the module is keyed, double check that the red stripe is on the side labeled red stripe ! Screw the module to your rack's rails.","title":"Installing the module"},{"location":"#inputs-and-outputs","text":"Castor & Pollux contains two separate oscillators. Each has two inputs with associated knobs: A pitch CV input. The range is 0v to +6v. A pitch knob. The range is -1 octave to +1 octave and is added to any incoming pitch CV. These have a special response curve that makes it easier to tune the oscillators . A pulse width CV input. This changes the pulse width of the pulse wave. The range is 0v to +5v. A pulse width knob. When combined with the pulse width CV it sets the minimum pulse width. Each oscillator also has three dedicated waveshape outputs: A ramp wave output A pulse wave output A sub square wave output Each waveshape is nominally 10v peak-to-peak. You can read more about the sound of each waveshape in the waveshape section. Each oscillator also has a waveshape mixer that contains level knobs for each waveshape and a mix output: The waveshape section also shows how mixing the waveshapes affects the waveshape and sound. There is also a combined output that mixes the output from both oscillators mixer together. It has a crossfader knob to determine which oscillator is more prominent in the mix: The oscillator stacking section has more details and sound samples of combining the oscillators together. Finally, there is a knob to enable chorusing and a button to enable hard sync: The chorusing section goes into more detail and has some sound samples, and the hard sync section shows how hard sync affects the second oscillator.","title":"Inputs and outputs"},{"location":"#tuning","text":"Castor & Pollux is an analog oscillator with a digital brain. It's calibrated during assembly to accurately track 1 volt/octave on the CV inputs and you can use the pitch knobs to adjust the tuning of each oscillator. In order to make tuning easier, the pitch knobs have a non-linear response: they are less sensitive in the middle of their range than the edges. It's usually easier to understand this visually, so try out this little demonstration: Linear response 440 Hz Non-linear response 440 Hz pitch knob Notice that with the non-linear response it's much easier to tune to frequencies around 440 Hz . This is how Castor & Pollux's pitch knobs work. You can configure how strong this effect is using the settings editor .","title":"Tuning"},{"location":"#waveshapes","text":"Just like the Juno, Castor & Pollux has three waveshape outputs: ramp, pulse, and sub. The ramp wave looks like this (click the image to start and stop the animation): Simulation vs reality These are simulations of perfect waveshapes. Castor & Pollux's waveshapes are generated by analog circuitry and they don't quite look exactly like these examples. That's a good thing - the analog weirdness is what adds character to the module. The ramp sounds like this: The pulse wave depends on the pulse width CV and knob. You can vary the pulse width in this animation to see how it affects the waveshape: pulse width You can also configure the internal low-frequency oscillator to modulate the pulse width. Here's some examples of the pulse wave's sound: Finally, there's the sub waveshape. It's a square wave that's one octave lower. Here's what it looks like: And here's some sound samples of the sub waveshape: These these waveshapes can be mixed together to produce much more complex and interesting waveshapes - try playing with the sliders under this animation and seeing how it affects the waveshape: ramp volume pulse volume pulse width sub volume Here's some sound samples of various mixes:","title":"Waveshapes"},{"location":"#oscillator-stacking","text":"Because Castor & Pollux has two oscillators, you can combine them together to build much more complex sounds. When there is no input into the second oscillator's pitch CV jack, it will follow the pitch of the the first oscillator. You can use the pitch knob of the second oscillator to detune the second oscillator and cause interesting interactions with the first oscillator. You'll take your output from the combined output (marked by the symbol \u264a\ufe0e) and you can control the relative volume of the two oscillators using the crossfader (marked by the symbol \u03a3). You can play around with this interactive animation to see how detuning and mixing changes the final waveshape: detuning crossfader (\u03a3) This animation just uses the ramp waveshape, but the crossfader takes the mix from each oscillator's mixer, so you can combine many different waveshapes. Here's some sound samples of oscillator stacking:","title":"Oscillator stacking"},{"location":"#chorusing","text":"Inspired by the original Juno's analog chorus circuit, Castor & Pollux contains an adaptation of chorusing that works well for a monophonic voice. Instead of applying the chorus affect after sound generation, Castor & Pollux's chorusing works by varying the frequency of the second oscillator using an internal low-frequency oscillator . This means that you have to use both oscillators in order to hear this effect. The chorus knob (marked by the symbol \u03c6) determines the intensity of chorusing from none when fully counter-clockwise to its maximum at fully clockwise. The crossfader (marked by the symbol \u03a3) also has an impact on the intensity of the chorus. Finally, you can modify the speed of the chorus by changing the internal low-frequency oscillator's frequency . You can play around with this interactive animation to see how the chorusing amount changes the final waveshape. You'll need to click on the animation to start it otherwise you won't really be able to see the chorusing effect. chorusing amount (\u03c6) Here's some sound samples of chorusing:","title":"Chorusing"},{"location":"#hard-sync","text":"Hard sync is a feature seen in several synthesizer voices that have two or more oscillators, however, it's not a feature seen on the original Juno because each voice only had one oscillator. Since Castor & Pollux has two oscillators to work with it has an adaption of hard sync. Hard sync allows you to sync the second oscillator to the first - the output will retain the same base frequency as the first oscillator but the waveshape will be impacted by the frequency of the second oscillator. In other words, it'll sound like the same note but have a much different timbre. To use hard sync tap the hard sync button - the LEDs should all change to the same color. You'll use the first oscillator's pitch CV to set the note and you'll use the second oscillator's pitch knob or pitch CV input to control the timbre. You'll take the output from the second oscillator (or the combined output) - since hard sync does not impact the waveshape of the first oscillator. Here's some sound samples of hard sync: Heads up Due to the way hard sync works, you shouldn't set the second oscillator to a lower frequency than the first. It'll just result in the sound growing softer since the second oscillator doesn't have enough time to output a complete wave cycle.","title":"Hard sync"},{"location":"#internal-low-frequency-oscillator","text":"Castor & Pollux has an built-in low-frequency oscillator ( LFO ) that's used for modulation. This LFO drives the chorus feature, but can also be assigned to some other parameters. To configure the internal LFO, hold down the hard sync button. The module's lights should change. While holding the hard sync button you can modify the following settings: Moving the chorus knob (\u03c6) will change the frequency of the LFO. The LEDs at the bottom of the module will pulse to show the LFO's frequency. Moving the pulse width knob of each of the oscillators will enable or disable LFO routing to the oscillator's pulse width. Turning the knob counter-clockwise will disable the LFO, turning it clockwise will enable it. The LEDs near the oscillator will illuminate if the LFO is enabled. When the LFO is enabled, the pulse width knob will control the intensity of the pulse width modulation instead of directly setting the pulse width. You can also configure the values for these settings at boot-up using the settings editor .","title":"Internal low-frequency oscillator"},{"location":"#editing-module-settings","text":"Even though Castor & Pollux uses analog circuitry to make its beautiful sounds, there is a little microcontroller brain inside that's orchestrating everything. There's a few settings you can tweak over USB, such as the LED brightness and the range of the pitch knobs. Head over to the web-based settings editor to tweak to your heart's content.","title":"Editing module settings"},{"location":"#updating-the-firmware","text":"Download the latest firmware from GitHub . It will be a .uf2 file. Connect Castor & Pollux to your computer via USB. The USB port is located underneath the panel. Note that you still have to power the module from a Eurorack power supply. Place Castor & Pollux in bootloader mode by pressing the reset button twice quickly. The reset button is located just below the USB port. Once in bootloader mode, you should see a drive on your computer named GEMINIBOOT . Copy the .uf2 file from step 1 to the GEMINIBOOT drive. The module should restart by itself.","title":"Updating the firmware"},{"location":"#open-source-hardware-software","text":"Castor & Pollux is completely open source and hacking is encouraged. The firmware is available under the MIT License . Note that the firmware uses some third-party libraries that are under different, but compatible terms. Read the full text of the license for more details. The hardware designs is available under the permissive CERN-OHL-P v2 and is designed using KiCAD which is free and open-source. You can open the hardware files using KiCAD or you can check out a PDF of the schematics for the mainboard and the jackboard . Castor & Pollux is certified open source hardware","title":"Open source hardware &amp; software"},{"location":"#warranty-disclaimers-and-limits","text":"Modules purchased from Winterbloom have a warranty of six months from the date of purchase. This warranty covers any manufacturing defects in the module. It does not cover damage from due to incorrect handling, storage, or power, overvoltage events, or modifications. Please contact us if you are experiencing issues with your module. Modules returned under warranty will either be refunded, replaced, or repaired at our discretion. You will be responsible for the cost of returning the module to Winterbloom. Because Eurorack has a vast number of possible combinations of power supplies, modules, cases, and accessories, it is impossible for us to guarantee compatibility with every possible configuration. We make a reasonable effort to test modules with several power supplies, cases, and other modules. We encourage tinkering, however, we will not refund, repair, or replace any products that have been modified. We have stress tested Castor & Pollux under the following conditions. These are provided for reference only; we do not guarentee that that the module will function under these conditions. Continuous run time: at least 48 hours Overvoltage from power supply: at least \u00b118 volts Reverse voltage from power supply: at least \u00b118 volts Undervoltage from power supply: as low as \u00b110 volts Over and under voltage on inputs: at least \u00b18 volts Output connected to another output: at least \u00b18 volts Output shorted to ground: at least 60 minutes","title":"Warranty, disclaimers, and limits"},{"location":"#acknowledgments-and-thanks","text":"Castor & Pollux would not be possible without the help of the Adafruit, support from Microchip, and the volumes of literature documenting and analyzing the Juno's DCO design.","title":"Acknowledgments and thanks"},{"location":"build/","text":"Castor & Pollux Kit Build Guide Welcome to the build guide for Castor & Pollux's DIY kit. We hope you have a great time putting this module together and a wonderful time using it. Please read all instructions thoroughly before starting. If you have questions or run into trouble please reach out to us on discord or drop us an email at support@winterbloom.com This build is a intermediate level kit. You should be comfortable soldering through-hole components and working with pin headers . If you're not, we encourage you to try out some other kits first, like our Big Honking Button kit . Even if you've got some experience, we recommend taking a look at Adafruit's guide to excellent soldering to refresh your knowledge. This build takes around three hours to complete. Tools and materials required # Before jumping in, make sure you have: A soldering iron, like this one . Solder, we can recommend Adafruit's 60/40 rosin core solder . Kit contents # Your kit should contain the following items. If any are missing please email us at support@winterbloom.com . Hover an item to see its name (1) Castor & Pollux mainboard (1) Castor & Pollux jackboard printed circuit board (PCB) (1) Castor & Pollux front panel (2) 20-pin 2.54\" pin sockets (12) 1/8\" jacks (12) Hex nuts for the 1/8\" jacks (13) Potentiometers (1) Tactile switch (1) Tactile switch cap (1) Eurorack power header (1) Eurorack power cable (1) M3x18 screw (1) M3x11 spacer (1) M3 nuts (4) M3x6 screws for attaching the module to your rack (2) Rubber bands We program, test, and calibrate the mainboard before sending it to you, so you don't have to worry about any of that- once you're done building you'll be good to go! Soldering the power header # Your first task is to solder the 10-pin Eurorack power connector. The power connector goes on the back side of the board. When placing note the notch in the outline on the board . You'll need to make sure the slot on the connector matches where the notch is on the outline . Once placed you can solder the 10 pins on the other side of the board. Be careful here and avoid touching the small components near the pins with your iron. Watch out for those LEDs! Avoid touching the LEDs with your iron- they really don't like being melted and they're very hard to replace. Soldering the pin headers # Next up is the two 20-pin sockets. They also go on the back side of the board, just like the power header. The easiest way to get everything aligned is to place the sockets on the matching headers on the mainboard: And then place the jackboard onto the sockets: Now you can solder all the pins. For each header, you should solder one of the pins at the edge first and make sure the sockets are flush against the board before continuing. It's much easier to fix alignment when you only have one pin to deal with. Once you're done, remove the mainboard and set it aside. Placing the front-side components # Now that you're done with the components on the back, it's time to take on the front. You'll need to place all of the components before soldering them - trust us, it'll make things easier. Start with the tactile switch. It goes right in the middle of the board: Go ahead and put the cap on it as well. It takes a little force, but it should snap into place. Next, place all of the potentiometers. You might have to give their little legs a squeeze to get them to fit into place. Finally, put in all of the 1/8\" jacks. They don't snap into place like the button and the potentiometers, so don't flip the board upside-down or you'll undo all of your work! Once complete, your jackboard should look like this: Using the front panel as a jig # Since the front-side components need to peek through the front panel, you can use it as a jig to make sure everything stays in the right place. Carefully put the front panel on, taking care to line up the holes. Now take the two rubber bands and use them to hold the whole assembly together while you're soldering. Put one at the top and one at the bottom, and double them over until they're tight enough to hold the components in place. Solder the front-side components # You're now ready to solder all of those front-side components. We recommend that you start with the tactile switch, being careful not to hit the pin sockets with your iron: Next, solder the potentiometer right underneath it - again, be careful not to hurt the pin sockets: Now you can solder all of the other components. As you solder, be sure to check that the front panel and all of the components are held in place and flush. You can move the rubber bands around as needed to get to all of the pads. Once you're done, remove the rubber bands and the panel. You won't need the rubber bands again, so feel free to re-use those. Attaching the mainboard to the jackboard # The mainboard and jackboard connect to each other through the 20-pin headers and sockets. To make sure everything is aligned correctly and stays in place, there's also a screw that fastens them together. First, take the M3x18 screw and place it through the mounting hole in the mainboard. It should be facing the same way as the pin headers. Next, take the M3 standoff and screw it onto the screw by hand until it's flush with the mainboard. Don't over-tighten it. Now take the jackboard and connect it to the mainboard using the pin headers and sockets. The screw should go through the matching hole in the middle of the jackboard: Finally, take the M3 nut and place it onto the exposed end of the screw and tighten it with your fingers. If you have trouble with this, you can use a small screwdriver to back the screw out a little and then screw it into the nut. Be careful not to over-tighten. Putting the panel on # The last step is to put Castor & Pollux's lovely panel on: Finish it up by screwing the 1/8\" jack nuts onto the jacks- again, don't over-tighten them. All done # Congratulations! You've finished your very own Castor & Pollux! Now that it's all put together go check out the User's Guide and please show us your work by tweeting at @wntrblm or tagging @wntrblm in your instagram post.","title":"Kit Build Instructions"},{"location":"build/#tools-and-materials-required","text":"Before jumping in, make sure you have: A soldering iron, like this one . Solder, we can recommend Adafruit's 60/40 rosin core solder .","title":"Tools and materials required"},{"location":"build/#kit-contents","text":"Your kit should contain the following items. If any are missing please email us at support@winterbloom.com . Hover an item to see its name (1) Castor & Pollux mainboard (1) Castor & Pollux jackboard printed circuit board (PCB) (1) Castor & Pollux front panel (2) 20-pin 2.54\" pin sockets (12) 1/8\" jacks (12) Hex nuts for the 1/8\" jacks (13) Potentiometers (1) Tactile switch (1) Tactile switch cap (1) Eurorack power header (1) Eurorack power cable (1) M3x18 screw (1) M3x11 spacer (1) M3 nuts (4) M3x6 screws for attaching the module to your rack (2) Rubber bands We program, test, and calibrate the mainboard before sending it to you, so you don't have to worry about any of that- once you're done building you'll be good to go!","title":"Kit contents"},{"location":"build/#soldering-the-power-header","text":"Your first task is to solder the 10-pin Eurorack power connector. The power connector goes on the back side of the board. When placing note the notch in the outline on the board . You'll need to make sure the slot on the connector matches where the notch is on the outline . Once placed you can solder the 10 pins on the other side of the board. Be careful here and avoid touching the small components near the pins with your iron. Watch out for those LEDs! Avoid touching the LEDs with your iron- they really don't like being melted and they're very hard to replace.","title":"Soldering the power header"},{"location":"build/#soldering-the-pin-headers","text":"Next up is the two 20-pin sockets. They also go on the back side of the board, just like the power header. The easiest way to get everything aligned is to place the sockets on the matching headers on the mainboard: And then place the jackboard onto the sockets: Now you can solder all the pins. For each header, you should solder one of the pins at the edge first and make sure the sockets are flush against the board before continuing. It's much easier to fix alignment when you only have one pin to deal with. Once you're done, remove the mainboard and set it aside.","title":"Soldering the pin headers"},{"location":"build/#placing-the-front-side-components","text":"Now that you're done with the components on the back, it's time to take on the front. You'll need to place all of the components before soldering them - trust us, it'll make things easier. Start with the tactile switch. It goes right in the middle of the board: Go ahead and put the cap on it as well. It takes a little force, but it should snap into place. Next, place all of the potentiometers. You might have to give their little legs a squeeze to get them to fit into place. Finally, put in all of the 1/8\" jacks. They don't snap into place like the button and the potentiometers, so don't flip the board upside-down or you'll undo all of your work! Once complete, your jackboard should look like this:","title":"Placing the front-side components"},{"location":"build/#using-the-front-panel-as-a-jig","text":"Since the front-side components need to peek through the front panel, you can use it as a jig to make sure everything stays in the right place. Carefully put the front panel on, taking care to line up the holes. Now take the two rubber bands and use them to hold the whole assembly together while you're soldering. Put one at the top and one at the bottom, and double them over until they're tight enough to hold the components in place.","title":"Using the front panel as a jig"},{"location":"build/#solder-the-front-side-components","text":"You're now ready to solder all of those front-side components. We recommend that you start with the tactile switch, being careful not to hit the pin sockets with your iron: Next, solder the potentiometer right underneath it - again, be careful not to hurt the pin sockets: Now you can solder all of the other components. As you solder, be sure to check that the front panel and all of the components are held in place and flush. You can move the rubber bands around as needed to get to all of the pads. Once you're done, remove the rubber bands and the panel. You won't need the rubber bands again, so feel free to re-use those.","title":"Solder the front-side components"},{"location":"build/#attaching-the-mainboard-to-the-jackboard","text":"The mainboard and jackboard connect to each other through the 20-pin headers and sockets. To make sure everything is aligned correctly and stays in place, there's also a screw that fastens them together. First, take the M3x18 screw and place it through the mounting hole in the mainboard. It should be facing the same way as the pin headers. Next, take the M3 standoff and screw it onto the screw by hand until it's flush with the mainboard. Don't over-tighten it. Now take the jackboard and connect it to the mainboard using the pin headers and sockets. The screw should go through the matching hole in the middle of the jackboard: Finally, take the M3 nut and place it onto the exposed end of the screw and tighten it with your fingers. If you have trouble with this, you can use a small screwdriver to back the screw out a little and then screw it into the nut. Be careful not to over-tighten.","title":"Attaching the mainboard to the jackboard"},{"location":"build/#putting-the-panel-on","text":"The last step is to put Castor & Pollux's lovely panel on: Finish it up by screwing the 1/8\" jack nuts onto the jacks- again, don't over-tighten them.","title":"Putting the panel on"},{"location":"build/#all-done","text":"Congratulations! You've finished your very own Castor & Pollux! Now that it's all put together go check out the User's Guide and please show us your work by tweeting at @wntrblm or tagging @wntrblm in your instagram post.","title":"All done"},{"location":"settings/","text":"To use this editor: Connect your Castor & Pollux to your Eurorack power supply. The module must be powered by the Eurorack power supply. Connect a USB cable from your computer to Castor & Pollux's USB port. It's located on the right side of the module on the bottom circuit board. Click the connect button , and when prompted, allow the page access to your MIDI devices. Once connected the editor will appear and load the current settings from your device. Once you're done editing, click the save button at the bottom of the editor. Re-start your module for the changes to take effect . You can do this by turning it off and back or on by pressing the small reset button that's right beside the USB port. Note This editor uses WebMIDI to communicate with Castor & Pollux. It works in Google Chrome , Microsoft Edge , and Opera ( full list of supported browsers ). If you run into issues, feel free to reach out . Connect Device info Firmware version content_copy Serial number content_copy This is your Castor & Pollux's current firmware version and serial number. We might ask you for this information if you reach out for help. \ud83e\uddda\u200d\u2640\ufe0f A new firmware version is available: Settings LED brightness percent The higher the brightness, the more power the module will consume. At maximum brightness, it consumes 130mA from the +12v rail. Castor pitch knob minimum octaves (volts) Castor pitch knob maximum octaves (volts) Pollux pitch knob minimum octaves (volts) Pollux pitch knob maximum octaves (volts) These settings set the range of the pitch knobs for each oscillator. By default, they have a range of about -1 to +1 octaves (volts). The value of the pitch knob is added to the pitch CV input. Note that because the module's analog-to-digital converter (ADC) isn't perfect, the knobs don't quite reach 100% of their range. You may need to nudge these to give the knob some headroom. Pitch knob non-linearity percent The firmware adjusts the pitch CV knobs so that it's easier to tune the oscillators. It does this by spreading the values near the center of the knob out so that the range at the center is more fine. This makes the knobs non-linear. This setting controls how \"intense\" that non-linearity is. 0.33% is equivalent to a linear response. Higher values make it easier and easier to tune the oscillator but sacrifices the range, values lower than 33% willmake it harder to tune and aren't recommended. This is 60% by default. Chorus maximum intensity percent This setting controls the maximum intensity of the chorusing feature. The intensity is the amount that the internal LFO effects the pitch of the second oscillator (Pollux). LFO frequency hertz This setting controls the default frequency of the internal low-frequency oscillator (LFO). This LFO is used by the chorusing feature and the pulse-width modulation (PWM) feature. The frequency can be changed anytime by holding the hard sync button and moving the chorusing amount ( \u03c6 ) knob, this just sets the frequency at start-up. LFO routing Route LFO to Castor's pulse width Route LFO to Pollux's pulse width These settings control whether the internal LFO is used to modulate the pulse width of each oscillator by default. The routing can be enabled or disabled at any time by holding hard sync button and moving the oscillator's pulse width knob, this just enables or disables it at start-up. CV smoothing initial gain percent CV smoothing sensitivity x multiplier These settings control how the module filters the pitch CV inputs. Due to inherent limitations with converting analog pitch CV to a digital pitch value, such as noise and transient errors, it's necessary to basically low-pass filter (or slew limit ) the readings. The module's filter is a little more sophisticated than that- it is a self-modulated low-pass filter. The initial gain setting settings the minimum affect of a new reading on the ongoing average - so if it is 0.1% then it will effect the ongoing average by 10%, if it is 1.0 then previous readings are essentially ignored because it effects the ongoing average by 100%. The sensitivity setting determines how much the low-pass filter can self-modulate. Higher settings means that the module will be more reactive to large changes in the CV input, whereas lower settings will cause the module to react very slowly to any change in the CV input. Danger zone These settings are calibrated during assembly and do not have default values . Changing these settings can cause your module to behave incorrectly. It's highly recommended that you write down these settings before making changes in case you need to restore them. Let me edit dangerous settings Pollux follower threshold code points, volts These settings controls how Pollux determines when to follow Castor. The intended behavior is that when no cable is attached to Pollux's pitch CV jack, it will follow Castor's pitch. The module detects this condition by seeing if the input jack is reading 0 volts. Sometimes due to analog conversion errors this threshold needs to be adjusted. Lower thresholds may lead to glitchy behavior as the noise measures above and below the threshold, and higher settings may lead to Pollux ignoring the pitch CV input on lower notes. CV input gain correction multiplier CV input error correction code points ADC gain correction x multiplier ADC offset correction code points These settings determine how the module corrects for gain and offset errors in its analog-to-digital converter (ADC). We calibrate every Castor & Pollux during manufacturing and save the calibration data to the device. However, we keep a copy of it in case it somehow gets erased or corrupted. You can use the restore button below to load the values that were originally on your device. If the button is greyed out, then we don't have a copy of your module's calibration data. \u2639\ufe0f Restore to factory values Save & restart Save Remember to save and restart your module to have these settings take effect!","title":"Settings Editor"}]}